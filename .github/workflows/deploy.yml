name: Build and Deploy NeskMod

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Find latest NeskMod.jar
        id: find-jar
        run: |
          jar_path=$(find . -type f -name "NeskMod.jar" | head -n 1)
          echo "jar-path=$jar_path" >> $GITHUB_OUTPUT

      - name: Get current date and time (France)
        id: datetime
        run: |
          TIMESTAMP="Date : $(TZ=Europe/Paris date '+%d.%m.%Y - Time : %Hh%M (France)')"
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Generate new tag
        id: tag
        run: |
          latest_tag=$(git tag --sort=-v:refname | grep '^v' | head -n1)
          if [ -z "$latest_tag" ]; then
            new_tag="v1.0.0"
          else
            IFS='.' read -ra vers <<< "${latest_tag#v}"
            major=${vers[0]}
            minor=${vers[1]}
            patch=${vers[2]}
            patch=$((patch + 1))
            new_tag="v$major.$minor.$patch"
          fi
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.tag.outputs.new_tag }}
          git push origin ${{ steps.tag.outputs.new_tag }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: Release ${{ steps.tag.outputs.new_tag }}
          body: |
            Automatically generated release.

            ${{ steps.datetime.outputs.timestamp }}
          files: ${{ steps.find-jar.outputs.jar-path }}
